swagger: '2.0'
info:
  description: "Api Documentation for Recipe Management App."
  version: '1.0'
  title: "Recipe Management Service"
  termsOfService: 'urn:tos'
  license:
    name: 'Apache 2.0'
    url: 'http://www.apache.org/licenses/LICENSE-2.0'

host: 'localhost:8080'
basePath: /
tags:
  - name: 'Recipe'
    description: 'Recipe Management Service'

paths:
  /recipe:
    get:
      tags:
        - 'recipe'

      summary: 'Get recipes'
      operationId: 'getRecipes'
      produces:
        - 'application/json'
      parameters:
        - name: 'type'
          in: 'query'
          description: 'Provide recipe type'
          required: false
          type: 'string'

        - name: 'name'
          in: 'query'
          description: 'Provide recipe name'
          required: false
          type: 'string'

        - name: 'maximum-serves'
          in: 'query'
          description: 'Provide maximum serving'
          required: false
          type: 'string'

        - name: 'minimum-serves'
          in: 'query'
          description: 'Provide minimum serving'
          required: false
          type: 'string'

        - name: 'name-contains'
          in: 'query'
          description: 'Provide partial name.'
          required: false
          type: 'string'

        - name: 'ingredients-contains'
          in: 'query'
          description: 'Provide included ingredients.'
          required: false
          type: 'string'

        - name: 'ingredients-not-contains'
          in: 'query'
          description: 'Provide excluded ingredients.'
          required: false
          type: 'string'

        - name: 'instructions-contains'
          in: 'query'
          description: 'Provide text contained in intructions.'
          required: false
          type: 'string'

        - name: 'instructions-not-contains'
          in: 'query'
          description: 'Provide text excluded in intructions.'
          required: false
          type: 'string'


      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/Recipes"
        500:
          description: "Server error"
          schema:
            $ref: "#/definitions/Error"


    post:
      tags:
        - "recipe"
      summary: "Add new recipe"
      operationId: "addRecipe"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "recipe"
          required: true
          schema:
            $ref: '#/definitions/Recipe'
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Recipe"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Already exists"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"

  /recipe/{name}:
    get:
      tags:
        - "recipe"
      summary: "Get recipe by name"
      operationId: 'getRecipe'
      produces:
        - 'application/json'
      parameters:
        - name: 'name'
          in: 'path'
          description: 'name'
          required: true
          type: 'string'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Recipe'
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - 'recipe'
      summary: "Update recipe"
      operationId: 'editRecipe'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - name: 'name'
          in: path
          description: 'Name of recipe'
          required: true
          type: 'string'
        - in: 'body'
          name: "body"
          description: "Updated recipe"
          required: true
          schema:
            $ref: '#/definitions/Recipe'
      responses:
        '200':
          description: "OK"
          schema:
            $ref: "#/definitions/Recipe"
        '404':
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        '400':
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        '500':
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
        - 'recipe'
      summary: 'Delete recipe'
      operationId: 'deleteRecipe'
      produces:
        - 'application/json'
      parameters:
        - name: 'name'
          in: 'path'
          description: 'Recipe name'
          required: true
          type: string
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/Response'
        404:
          description: "Recipe not found"
          schema:
            $ref: '#/definitions/Error'
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/Error"


definitions:
  Recipes:
    type: array
    items:
      type: object
    properties:
      recipe:
        $ref: '#/definitions/Recipe'
    title: Recipes

  Recipe:
    type: object
    required:
      - instructions
      - name
      - serves
      - type
      - ingredients
    properties:
      ingredients:
        type: array
        items:
          type: string
      instructions:
        type: string
      name:
        type: string
      serves:
        type: integer
        format: int32
      type:
        type: string
    title: Recipe

  Response:
    type: object
    properties:
      message:
        type: string
    title: Response


  Error:
    type: object
    required:
      - timestamp
      - message
      - status
    properties:
      timestamp:
        type: string
      message:
        type: string
      status:
        type: integer

