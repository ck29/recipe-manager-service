openapi: '3.0.2'
info:
  description: "Api Documentation for Recipe Management App."
  version: '1.0'
  title: "Recipe Management Service"
  termsOfService: 'urn:tos'
  license:
    name: 'Apache 2.0'
    url: 'http://www.apache.org/licenses/LICENSE-2.0'

servers:
  - url: 'http://localhost:8080/'

tags:
  - name: Recipe
    description: Recipe Management Service

paths:
  /recipe:
    get:
      tags:
        - recipe

      summary: Get recipes
      operationId: getRecipes

      parameters:
        - name: type
          in: query
          description: Provide recipe type
          required: false
          schema:
            type: string

        - name: 'name'
          in: 'query'
          description: 'Provide recipe name'
          required: false
          schema:
            type: string

        - name: 'maximum-serves'
          in: 'query'
          description: 'Provide maximum serving'
          required: false
          schema:
            type: string

        - name: 'minimum-serves'
          in: 'query'
          description: 'Provide minimum serving'
          required: false
          schema:
            type: string

        - name: 'name-contains'
          in: 'query'
          description: 'Provide partial name.'
          required: false
          schema:
            type: string

        - name: 'ingredients-contains'
          in: 'query'
          description: 'Provide included ingredients.'
          required: false
          schema:
            type: string

        - name: 'ingredients-not-contains'
          in: 'query'
          description: 'Provide excluded ingredients.'
          required: false
          schema:
            type: string

        - name: 'instructions-contains'
          in: 'query'
          description: 'Provide text contained in intructions.'
          required: false
          schema:
            type: string

        - name: 'instructions-not-contains'
          in: 'query'
          description: 'Provide text excluded in intructions.'
          required: false
          schema:
            type: string


      responses:
        '200':
          description: "Successful"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Recipes"

        '500':
          description: "Server error"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Error"


    post:
      tags:
        - "recipe"
      summary: "Add new recipe"
      operationId: "addRecipe"
      requestBody:
        description: Recipe to add.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '201':
          description: "Created"
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Recipe"
        '400':
          description: "Bad request"
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Error"

        '409':
          description: "Already exists"
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Error"

        '500':
          description: "Server Error"
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Error"


  /recipe/{name}:
    get:
      tags:
        - "recipe"
      summary: "Get recipe by name"
      operationId: 'getRecipe'
      parameters:
        - name: 'name'
          in: 'path'
          description: 'name'
          required: true
          schema:
            type: 'string'
      responses:
        '200':
          description: "Successful"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Recipe"
        '500':
          description: "Server Error"
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Error"
    put:
      tags:
        - 'recipe'
      summary: "Update recipe"
      operationId: 'editRecipe'
      requestBody:
        description: Recipe to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      parameters:
        - name: 'name'
          in: path
          description: 'Name of recipe'
          required: true
          schema:
            type: 'string'

      responses:
        '200':
          description: "Successful"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Recipe"
        '404':
          description: "Not found"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Recipe"
        '400':
          description: "Bad request"
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Error"

        '500':
          description: "Server Error"
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Error"
    delete:
      tags:
        - 'recipe'
      summary: 'Delete recipe'
      operationId: 'deleteRecipe'
      parameters:
        - name: 'name'
          in: 'path'
          description: 'Recipe name'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Successful"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Recipe"
        '404':
          description: "Not found"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Recipe"
        '400':
          description: "Bad request"
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Error"

        '500':
          description: "Server Error"
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Error"


components:
  schemas:
    Recipes:
      type: array
      title: Recipes
      items:
        $ref: '#/components/schemas/Recipe'

    Recipe:
      type: object
      title: Recipe
      properties:
        ingredients:
          type: array
          items:
            type: string
        instructions:
          type: string
        name:
          type: string
        serves:
          type: integer
          format: int32
        type:
          type: string

    Error:
      type: object
      required:
        - timestamp
        - message
        - status
      properties:
        timestamp:
          type: string
        message:
          type: string
        status:
          type: integer

